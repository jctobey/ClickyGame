{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","components/Header/Header.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","alt","name","src","image","onClick","addClickedFriend","id","Wrapper","children","Title","Header","score","style","color","correctGuess","guess","highscore","data-toggle","data-target","aria-controls","aria-expanded","aria-label","App","state","friends","Friends","clickedFriend","highScore","_this","includes","setState","userMessage","fisherYates","resetGame","Object","toConsumableArray","concat","openModal","modalIsOpen","tempVal","randIndex","index","length","Math","floor","random","this","_this2","components_Wrapper","Header_Header","components_Title","map","friend","components_FriendCard","key","occupation","location","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.8002e476.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img\n          alt={props.name}\n          src={props.image}\n          onClick={() => props.addClickedFriend(props.id)}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <a className=\"navbar-brand col-4\">Score: {props.score}</a>\r\n      <a\r\n        className=\"navbar-brand col-5\"\r\n        style={{ color: props.correctGuess ? \"black\" : \"red\" }}\r\n      >\r\n        Last Guess: {props.guess}\r\n      </a>\r\n\r\n      <a className=\"navbar-brand col-4\">High Score: {props.highscore}</a>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarSupportedContent\"\r\n        aria-controls=\"navbarSupportedContent\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\" />\r\n      </button>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Friends from \"./friends.json\";\nimport Header from \"./components/Header/Header\";\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends: Friends,\n    score: 0,\n    clickedFriend: [],\n    highScore: 0,\n    correctGuess: true\n  };\n\n  componentDidMount() {\n    let { friends } = this.state;\n    friends = this.fisherYates(friends);\n    this.setState({\n      friends\n    });\n  }\n\n  addClickedFriend = id => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    if (!this.state.clickedFriend.includes(id)) {\n      // const clicked = this.state.friends.filter(friend => friend.id === id);\n      // Set this.state.friends equal to the new friends array\n      this.setState({\n        clickedFriend: [...this.state.clickedFriend, id],\n        score: this.state.score + 1,\n        userMessage: \"You guessed correctly!\",\n        correctGuess: true\n      });\n      if (\n        this.state.score >= this.state.highScore ||\n        this.state.highScore === 0\n      ) {\n        this.setState({ highScore: this.state.score + 1 });\n      }\n      this.fisherYates();\n    } else {\n      this.setState({\n        userMessage: \"You guessed incorrectly!\",\n        correctGuess: false\n      });\n      this.fisherYates();\n      this.resetGame();\n    }\n  };\n\n  openModal = () => {\n    this.setState({ modalIsOpen: true });\n  };\n\n  closeModal() {\n    this.setState({ modalIsOpen: false });\n  }\n  resetGame = () => {\n    this.setState({\n      score: 0,\n      clickedFriend: []\n    });\n  };\n  //Fisher-Yates Shuffle\n  fisherYates = friends => {\n    let index = Friends.length;\n    let tempVal;\n    let randIndex;\n\n    while (0 !== index) {\n      randIndex = Math.floor(Math.random() * index);\n      index -= 1;\n      tempVal = Friends[index];\n      Friends[index] = Friends[randIndex];\n      Friends[randIndex] = tempVal;\n    }\n    return friends;\n  };\n  highScore = () => {\n    if (this.state.score > this.state.highScore) {\n      this.setState({ highScore: this.state.score + 1 });\n    }\n  };\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Header\n          className=\"Header\"\n          score={this.state.score}\n          highscore={this.state.highScore}\n          guess={this.state.userMessage}\n          correctGuess={this.state.correctGuess}\n        />\n        <Title>Clicky Game</Title>\n        {this.state.friends.map(friend => (\n          <FriendCard\n            addClickedFriend={this.addClickedFriend}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            occupation={friend.occupation}\n            location={friend.location}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}